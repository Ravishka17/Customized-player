{"messages": [{"role": "system", "content": "You are a coding expert."}, {"role": "user", "content": "What does the 'map' function do in JavaScript?"}, {"role": "assistant", "content": "The `map` function in JavaScript creates a new array by applying a function to each element of an existing array. It does not modify the original array. For example:\n\n```javascript\nconst numbers = [1, 2, 3];\nconst doubled = numbers.map(n => n * 2); // [2, 4, 6]\n```"}]}
{"messages": [{"role": "system", "content": "You are a coding expert."}, {"role": "user", "content": "How can I check for null values in Python?"}, {"role": "assistant", "content": "In Python, you can check if a variable is `None` using the `is` operator:\n\n```python\nif my_var is None:\n    print(\"Value is null\")\n```"}]}
{"messages": [{"role": "system", "content": "You are a coding expert."}, {"role": "user", "content": "I have a bug: my C++ program crashes when accessing a pointer. How do I debug it?"}, {"role": "assistant", "content": "Start by checking if the pointer is null before accessing it:\n\n```cpp\nif (ptr != nullptr) {\n    // safe to use ptr\n} else {\n    std::cout << \"Pointer is null\" << std::endl;\n}\n```\nAlso, use tools like `gdb` or `valgrind` to trace the exact line of the crash and check for memory issues such as uninitialized or freed pointers."}]}
{"messages": [{"role": "system", "content": "You are a coding expert."}, {"role": "user", "content": "What is the difference between == and === in JavaScript?"}, {"role": "assistant", "content": "In JavaScript, `==` is the loose equality operator, which compares values after performing type coercion. `===` is the strict equality operator, which checks both value and type. For example:\n\n```javascript\n'5' == 5   // true\n'5' === 5  // false\n```"}]}
{"messages": [{"role": "system", "content": "You are a coding expert."}, {"role": "user", "content": "How do I write a recursive function to compute factorial in Python?"}, {"role": "assistant", "content": "Here is a simple recursive function to compute the factorial of a number in Python:\n\n```python\ndef factorial(n):\n    if n == 0 or n == 1:\n        return 1\n    return n * factorial(n - 1)\n\nprint(factorial(5))  # Output: 120\n```"}]}
